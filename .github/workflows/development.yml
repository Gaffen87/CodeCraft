name: Build, Test, and Audit
on:
  push:
    branches:
      - development
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read  # This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1'
          
      - name: Build with dotnet
        run: dotnet build --configuration Release
      
      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal
        
      - name: dotnet publish
        run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/myapp"
      
      # NuGet package vulnerability scanning using dotnet CLI
      - name: Check for vulnerable packages
        run: |
          echo "### Vulnerable Package Report" > nuget-vulnerabilities.md
          dotnet list package --vulnerable --include-transitive >> nuget-vulnerabilities.md
          if (Select-String -Path nuget-vulnerabilities.md -Pattern "has the following vulnerable packages") {
            echo "::warning::Vulnerable NuGet packages detected. See nuget-vulnerabilities.md for details."
          } else {
            echo "No vulnerable NuGet packages detected."
          }
        shell: pwsh
      
      # Setup Node.js for npm operations
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      # Install npm dependencies if package.json exists
      - name: Install npm dependencies
        run: |
          if (Test-Path -Path "package.json") {
            npm ci
          } else {
            echo "No package.json found, skipping npm install"
          }
        shell: pwsh
      
      # Run npm audit
      - name: npm audit
        run: |
          if (Test-Path -Path "package.json") {
            npm audit
          } else {
            echo "No package.json found, skipping npm audit"
          }
        shell: pwsh
        continue-on-error: true  # Prevents the workflow from failing if vulnerabilities are found
      
      # Generate dependency report
      - name: Generate dependency report
        run: |
          echo "### .NET Dependencies" > dependency-report.md
          dotnet list package --include-transitive > dotnet-packages.txt
          Get-Content dotnet-packages.txt >> dependency-report.md
          
          if (Test-Path -Path "package.json") {
            echo "" >> dependency-report.md
            echo "### NPM Dependencies" >> dependency-report.md
            npm list --depth=0 >> npm-packages.txt
            Get-Content npm-packages.txt >> dependency-report.md
            
            echo "" >> dependency-report.md
            echo "### NPM Outdated Packages" >> dependency-report.md
            npm outdated --parseable >> npm-outdated.txt
            Get-Content npm-outdated.txt >> dependency-report.md
          }
        shell: pwsh
        
      # Output vulnerable package report to GitHub Actions summary
      - name: Output vulnerabilities to workflow summary
        run: |
          echo "## NuGet Vulnerability Report" >> $GITHUB_STEP_SUMMARY
          if (Test-Path -Path nuget-vulnerabilities.md) {
            Get-Content nuget-vulnerabilities.md >> $GITHUB_STEP_SUMMARY
          } else {
            echo "No NuGet vulnerabilities report found." >> $GITHUB_STEP_SUMMARY
          }
          
          if (Test-Path -Path "package.json") {
            echo "## NPM Audit Results" >> $GITHUB_STEP_SUMMARY
            npm audit --json | ConvertFrom-Json | ForEach-Object {
              $total = $_.metadata.vulnerabilities.info + $_.metadata.vulnerabilities.low + $_.metadata.vulnerabilities.moderate + $_.metadata.vulnerabilities.high + $_.metadata.vulnerabilities.critical
              echo "Found $total vulnerabilities:" >> $GITHUB_STEP_SUMMARY
              echo "- Critical: $($_.metadata.vulnerabilities.critical)" >> $GITHUB_STEP_SUMMARY
              echo "- High: $($_.metadata.vulnerabilities.high)" >> $GITHUB_STEP_SUMMARY
              echo "- Moderate: $($_.metadata.vulnerabilities.moderate)" >> $GITHUB_STEP_SUMMARY
              echo "- Low: $($_.metadata.vulnerabilities.low)" >> $GITHUB_STEP_SUMMARY
              echo "- Info: $($_.metadata.vulnerabilities.info)" >> $GITHUB_STEP_SUMMARY
            }
          }
        shell: pwsh
        continue-on-error: true
